{"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/'..(_:_:)-8selm","title":"static func .. <AppendedValue>(CasePath<Root, Value>, CasePath<Value, AppendedValue>) -> CasePath<Root, AppendedValue>","type":"op"},{"path":"\/documentation\/casepaths\/casepath\/'..(_:_:)-9emru","title":"static func .. <AppendedValue>(CasePath<Root, Value>, (AppendedValue) -> Value) -> CasePath<Root, AppendedValue>","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/init(_:)-2owjf","title":"init((Value) -> Root)","type":"init"},{"path":"\/documentation\/casepaths\/casepath\/init(_:)-777fr","title":"init(Root)","type":"init"},{"path":"\/documentation\/casepaths\/casepath\/init(_:)-9nzk4","title":"init(Root.Type)","type":"init"},{"path":"\/documentation\/casepaths\/casepath\/init(embed:extract:)","title":"init(embed: (Value) -> Root, extract: (Root) -> Value?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/appending(path:)","title":"func appending<AppendedValue>(path: CasePath<Value, AppendedValue>) -> CasePath<Root, AppendedValue>","type":"method"},{"path":"\/documentation\/casepaths\/casepath\/embed(_:)","title":"func embed(Value) -> Root","type":"method"},{"path":"\/documentation\/casepaths\/casepath\/extract(from:)","title":"func extract(from: Root) -> Value?","type":"method"},{"path":"\/documentation\/casepaths\/casepath\/modify(_:_:)","title":"func modify<Result>(inout Root, (inout Value) throws -> Result) throws -> Result","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/description-swift.type.property","title":"static var description: CasePath<String, Value>","type":"property"},{"path":"\/documentation\/casepaths\/casepath\/never","title":"static var never: CasePath<Root, Never>","type":"property"},{"path":"\/documentation\/casepaths\/casepath\/rawvalue","title":"static var rawValue: CasePath<Root, Value>","type":"property"},{"path":"\/documentation\/casepaths\/casepath\/self","title":"static var `self`: CasePath<Root, Root>","type":"property"},{"path":"\/documentation\/casepaths\/casepath\/some","title":"static var some: CasePath<Root, Value>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/case(_:)-3nw1d","title":"static func `case`((Value) -> Root) -> CasePath<Root, Value>","type":"method"},{"path":"\/documentation\/casepaths\/casepath\/case(_:)-5s7mr","title":"static func `case`(Root) -> CasePath<Root, Value>","type":"method"},{"path":"\/documentation\/casepaths\/casepath\/constant(_:)","title":"static func constant(Value) -> CasePath<Root, Value>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/casepaths\/casepath\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/casepaths\/casepath\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/casepaths\/casepath","title":"CasePath","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/casepaths\/xctunwrap(_:case:_:file:line:)","title":"func XCTUnwrap<Root, Case>(() throws -> Root, case: (Root) -> Case?, () -> String, file: StaticString, line: UInt) throws -> Case","type":"func"},{"path":"\/documentation\/casepaths\/extract(_:)-2jy2a","title":"func extract<Root, Value>((Value) -> Root) -> (Root) -> Value?","type":"func"},{"path":"\/documentation\/casepaths\/extract(_:)-5ivuf","title":"func extract<Root, Value>((Value) -> Root?) -> (Root?) -> Value?","type":"func"},{"path":"\/documentation\/casepaths\/extract(case:from:)-82wth","title":"func extract<Root, Value>(case: (Value) -> Root?, from: Root?) -> Value?","type":"func"},{"path":"\/documentation\/casepaths\/extract(case:from:)-89rof","title":"func extract<Root, Value>(case: (Value) -> Root, from: Root) -> Value?","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/casepaths\/'..(_:_:)","title":"func .. <Root, Value, AppendedValue>((Root) -> Value?, (AppendedValue) -> Value) -> (Root) -> AppendedValue?","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-1zudw","title":"func \/ <Root>(Root?) -> CasePath<Root?, Void>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-270qe","title":"func \/ <Root, Value>(CasePath<Root, Value>) -> CasePath<Root, Value>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-2n5ny","title":"func \/ <Root>(Root.Type) -> CasePath<Root, Root>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-2r5nq","title":"func \/ <Root, Value>((Value) -> Root?) -> CasePath<Root?, Value>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-4nrup","title":"func \/ <Root>(Root) -> CasePath<Root, Void>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-4v1w8","title":"func \/ <Root>(Root) -> (Root) -> Void?","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-82yvm","title":"func \/ <Root, Value>((Value) -> Root) -> CasePath<Root, Value>","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-8h7yj","title":"func \/ <Root, Value>((Value) -> Root?) -> (Root?) -> Value?","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-9oq0w","title":"func \/ <Root>(Root) -> (Root?) -> Void?","type":"op"},{"path":"\/documentation\/casepaths\/\/(_:)-9tuff","title":"func \/ <Root, Value>((Value) -> Root) -> (Root) -> Value?","type":"op"},{"path":"\/documentation\/casepaths\/~=(_:_:)","title":"func ~= <Root, Value>(CasePath<Root, Value>, Root) -> Bool","type":"op"}],"path":"\/documentation\/casepaths","title":"CasePaths","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}